version: "3.8"

volumes:
  rabbitmq_data:

services:
  ##########
  # Microservice Port Numbers
  # Manage issue : 5300
  # Parking Handler : 5100
  # Place Booking : 5200
  # Rental Vehicle : 5003
  # Payment : 5006
  # Report : 5002
  # Rental : 5001
  # Parking : 5000
  ##########

  #######################################################
  # Place Booking: The Place Booking complex microservice
  #######################################################
  place_booking:
    build:
      context: ./
      dockerfile: place_booking.Dockerfile
    image: jamestanyh/place_booking:1.0
    restart: always
    depends_on:
      - rental
      - rentalvehicle
    environment:
      rental_url: http://rental:5001/rental
      rentalvehicle_url: http://rentalvehicle:5003/rentalvehicle/updatebooked/
      PYTHONUNBUFFERED: 1
    ports:
      - "5200:5200"
 
  #####################################################
  # Manage Issue: The Manage Issue complex microservice
  #####################################################
  manage_issue:
    build:
      context: ./
      dockerfile: manage_issue.Dockerfile
    image: jamestanyh/manage_issue:1.0
    restart: always
    depends_on:
      - rental
      - rentalvehicle
      - report
      - send_text
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      damaged_vehicle_url: http://rentalvehicle:5003/rentalvehicle/damage/
      report_url: http://report:5002/report
      cancel_rental_url: http://rental:5001/rental/canceltrip/
      refund_url: http://payment:5006/refund-payment/
      get_replacements_url: http://rentalvehicle:5003/rentalvehicle/get_replacements/
      update_vehicle_url: http://rentalvehicle:5003/rentalvehicle/updatebooked/
      update_rental_url: http://rental:5001/rental/
      PYTHONUNBUFFERED: 1
    ports:
      - "5300:5300"

  ###########################################################
  # Parking Handler: The Parking Handler complex microservice
  ###########################################################
  parking_handler:
    build:
      context: ./
      dockerfile: parking_handler.Dockerfile
    image: jamestanyh/parking_handler:1.0
    restart: always
    depends_on:
      - rental
      - rentalvehicle
      - parking
    environment:
      parking_url: http://parking:5000/parkingspot
      rental_url: http://rental:5001/rental/endtrip/
      vehicle_url: http://rentalvehicle:5003/rentalvehicle/updateavailable/
      PYTHONUNBUFFERED: 1
    ports:
      - "5100:5100"

  #####################################
  # Rental: The RentalTrip microservice
  #####################################
  rental:
    build:
      context: ./
      dockerfile: rental.Dockerfile
    image: jamestanyh/rental:0.1
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/rentaltrip
      PYTHONUNBUFFERED: 1

  #################################################
  # Rental Vehicle: The Rental Vehicle microservice
  #################################################
  rentalvehicle:
    build:
      context: ./
      dockerfile: rental_vehicle.Dockerfile
    image: jamestanyh/rentalvehicle:0.1
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/rentalvehicle
      PYTHONUNBUFFERED: 1
    ports:
      - "5003:5003"

  ##################################
  # Report: The Report microservice
  ##################################
  report:
    build:
      context: ./
      dockerfile: report.Dockerfile
    image: jamestanyh/report:0.1
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/rentalreports
      PYTHONUNBUFFERED: 1

  ###################################
  # Parking: The Parking microservice
  ###################################
  parking:
    build:
      context: ./
      dockerfile: parking.Dockerfile
    image: jamestanyh/parking:0.1
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/designatedparkingspot
      PYTHONUNBUFFERED: 1

  ####################################
  # RabbitMQ: The messaging broker  
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: tim-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq

  #################################################
  # Send Text: The SMS microservice
  #################################################
  send_text:
    build:
      context: ./
      dockerfile: send_text.Dockerfile
    image: jamestanyh/send_text:0.1
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
      ## Twilio Credentials, please change here
      TWILIO_ACCOUNT_SID: AC3c575ead1cff2b389735754170da1276
      TWILIO_AUTH_TOKEN:  40e14491d3191a8a683914e6da617c65
      TWILIO_PHONE_NUMBER: +15855801259

  ###################################
  # Payment: The Payment microservice
  ###################################
  payment:
    build:
      context: ./
      dockerfile: payment.Dockerfile
    image: jamestanyh/payment:0.1
    restart: always
    environment:
      PYTHONUNBUFFERED: 1
    ports:
      - "5006:5006"